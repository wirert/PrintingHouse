@using PrintingHouse.Infrastructure.Data.Entities.Enums;
@model IEnumerable<OrderViewModel>
@{
    string returnUrl = ViewContext.HttpContext.Request.Path;
}

<div class="row">
    <div class="table-responsive col-sm-12">
        <div>
            <h1 class="d-inline-block">All Orders</h1>
            <button id="hide_completed_btn" class="btn btn-warning d-inline-block ms-5 mb-1">Hide Completed and Canceled</button>
        </div>

        <table style="font-size:small" id="orders-table" class="table table-bordered table-hover dataTable dtr-inline" aria-describedby="example2_info">
            <thead style="font-size:x-small" class="table-dark">
                <tr>
                    <th class="sorter_th" scope="col">No.</th>
                    <th class="sorter_th" scope="col">Created on</th>
                    <th class="sorter_th" scope="col">Status</th>
                    <th class="sorter_th" scope="col">Article No.</th>
                    <th class="sorter_th" scope="col">Article</th>
                    <th class="sorter_th" scope="col">Material</th>
                    <th class="sorter_th" scope="col">Width (m)</th>
                    <th class="sorter_th" scope="col">Client</th>
                    <th class="sorter_th" scope="col">Quantity</th>
                    <th class="sorter_th" scope="col">Embedded material (count)</th>
                    <th class="sorter_th" scope="col">Printed material (pieces or m)</th>
                    <th class="sorter_th" scope="col">Scrapped (%)</th>
                    <th class="sorter_th" scope="col">Deadline</th>
                    <th class="sorter_th" scope="col">Expected print date</th>
                    <th class="sorter_th" scope="col">Expected time needed</th>
                    <th class="sorter_th" scope="col">Color model</th>
                    <th class="sorter_th" scope="col">Comment</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Number</td>
                        <td>@order.OrderTime</td>
                        <td class="order-status">@order.Status</td>
                        <td>@order.ArticleNo</td>
                        <td>@order.ArticleName</td>
                        <td>@order.Material</td>
                        <td>@order.Width</td>
                        <td>@order.ClientName</td>
                        <td>@order.Quantity</td>
                        <td>@order.EmbeddedMaterialCount</td>
                        <td>@order.MaterialQuantity</td>
                        <td>@order.ScrappedMaterial %</td>
                        <td>@order.EndDate?.ToString("d")</td>
                        <td>@order.ExpectedPrintDate.ToString("d")</td>
                        <td>@order.ExpectedPrintTime</td>
                        <td>@order.ColorModel</td>
                        <td>@Html.Raw(order.Comment)</td>
                        <td>
                            @if (User.IsInRole(AdminRoleName) || User.IsInRole(MerchantRoleName))
                            {
                                <div class="d-flex flex-column">
                                    <form asp-controller="Order" asp-action="ChangeStatus" method="post">
                                        <input name="id" type="hidden" value="@order.Id" />
                                        <input name="status" type="hidden" value="@OrderStatus.Canceled">
                                        <input name="returnUrl" type="hidden" , value="@returnUrl">
                                        <button class="btn btn-sm btn-danger m-1" title="Cancel order" type="submit"><i class="fa-solid fa-ban"></i></button>
                                    </form>
                                    @if (order.Status == OrderStatus.NoConsumable)
                                    {
                                        <form asp-controller="Order" asp-action="ChangeStatus" method="post">
                                            <input name="id" type="hidden" value="@order.Id" />
                                            <input name="returnUrl" type="hidden" , value="@returnUrl">
                                            <input name="status" type="hidden" value="@OrderStatus.Waiting">
                                            <button class="btn btn-sm btn-warning m-1" title="Take consumables" type="submit"><i class="fas fa-truck-loading"></i></button>
                                        </form>
                                    }
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
</div>

@section Scripts{
    <script>
        $('#hide_completed_btn').on('click', function (e) {
            e.preventDefault();
            e.stopPropagation();

            var table_1 = document.getElementById("orders-table");
            var button_hide = document.getElementById("hide_completed_btn");
            var all_tr = table_1.getElementsByTagName("tr");

            if (button_hide.textContent === "Hide Completed and Canceled"){
                button_hide.textContent = "Show Completed and Canceled";
                button_hide.style.backgroundColor = "#0dcaf0";
                button_hide.style.borderColor = "#0dcaf0";
            }
            else{
                button_hide.textContent = "Hide Completed and Canceled";
                button_hide.style.backgroundColor = "#ffc107";
                button_hide.style.borderColor = "#ffc107";
            }

            for (var i = 0; i < all_tr.length; i++) {
                var name_column = all_tr[i].getElementsByTagName("td")[2];

                if (name_column) {
                    var name_value = name_column.textContent || name_column.innerText;

                    if (name_value === "Completed" || name_value === "Canceled") {
                        if (all_tr[i].style.display === "") {
                            all_tr[i].style.display = "none";
                        }
                        else {
                            all_tr[i].style.display = "";
                        }
                    }
                    else {
                        all_tr[i].style.display = "";
                    }
                }
            }
        });
    </script>

    <script>
        var allTableCells = document.getElementsByClassName("order-status");

        for (var i = 0, max = allTableCells.length; i < max; i++) {
            var node = allTableCells[i];
            var currentText = node.childNodes[0].nodeValue;

            if (currentText === "Canceled") {
                node.style.color = "red";
                node.style.fontWeight = "bold";
            }
            else if (currentText === "Printing") {
                node.style.color = "blue";
                node.style.fontWeight = "bold";
            }
            else if (currentText === "Completed") {
                node.style.color = "green";
                node.style.fontWeight = "bold";
            }
            else if (currentText === "Waiting") {
                node.style.color = "orange";
                node.style.fontWeight = "bold";
            }
            else {
                node.style.color = "grey";
                node.style.fontWeight = "bold";
                node.style.fontSize = "12px";
            }
        }

    </script>

    <script>table_sort();</script>
}