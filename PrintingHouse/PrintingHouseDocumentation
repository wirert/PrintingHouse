<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PrintingHouse</name>
    </assembly>
    <members>
        <member name="T:PrintingHouse.Areas.Admin.Controllers.BaseController">
            <summary>
            Admin area base controller
            </summary>
        </member>
        <member name="T:PrintingHouse.Areas.Admin.Controllers.EmployeeController">
            <summary>
            Employee controller in admin area
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.EmployeeController.Add">
            <summary>
            Add new employee (get)
            </summary>
            <returns>View with Employee view model</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.EmployeeController.Add(PrintingHouse.Core.AdminModels.Employee.AddEmployeeViewModel)">
            <summary>
            Creates new employee with registered application user data
            </summary>
            <param name="model">Add employee view model with form parameters</param>
            <returns>Redirect to All employees action</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.EmployeeController.All">
            <summary>
            Show all active employees
            </summary>
            <returns>View with Collection of employee view model</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.EmployeeController.Edit(System.Int32)">
            <summary>
            Edit existing employee data (position and permissions)
            </summary>
            <param name="id">employee identifier</param>
            <returns>View with model</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.EmployeeController.Edit(PrintingHouse.Core.AdminModels.Employee.EditEmployeeViewModel)">
            <summary>
            Change position and permissions of an employee
            </summary>
            <param name="model">Edit employee view model</param>
            <returns>Redirect to All employees action</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.EmployeeController.Delete(System.Int32)">
            <summary>
            Soft delete for employee with delete of personal data and permissions (roles)
            </summary>
            <param name="id">employee identifier</param>
            <returns>Redirects to All employees action</returns>
        </member>
        <member name="T:PrintingHouse.Areas.Admin.Controllers.PositionController">
            <summary>
            Work position controller (admin area)
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.PositionController.Add">
            <summary>
            Add new position
            </summary>
            <returns>view with add position view model</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.PositionController.Add(PrintingHouse.Core.AdminModels.Position.AddPositionViewModel)">
            <summary>
            Creates new work position
            </summary>
            <param name="model">Add position view model with form data</param>
            <returns>Redirect to action All in Employee controller</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.PositionController.Delete">
            <summary>
            Gets all active position to view to select for deletion
            </summary>
            <returns>view with Enumeration of Position view model</returns>
        </member>
        <member name="M:PrintingHouse.Areas.Admin.Controllers.PositionController.Delete(System.Int32)">
            <summary>
            Soft delete position 
            </summary>
            <param name="positionId">position id</param>
            <returns>Redirect to action All in Employee controller</returns>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.IndexModel.Username">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.IndexModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.IndexModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:PrintingHouse.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel.PhoneNumber">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.Index">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.ChangePassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.DownloadPersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.DeletePersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.PersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.TwoFactorAuthentication">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.IndexNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.EmailNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.ChangePasswordNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.DownloadPersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.DeletePersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.ExternalLoginsNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.PersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.TwoFactorAuthenticationNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Areas.Identity.Pages.Account.Manage.ManageNavPages.PageNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:PrintingHouse.Controllers.AccountController.Register">
            <summary>
            Register action for registration of users
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.AccountController.Register(PrintingHouse.Core.Models.Account.RegisterViewModel)">
            <summary>
            Register action for registration of users
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.AccountController.Login(System.String)">
            <summary>
            User Logging in
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.AccountController.Login(PrintingHouse.Core.Models.Account.LoginViewModel)">
            <summary>
            User Logging in
            </summary>
            <param name="model">Log in view model</param>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.AccountController.Logout">
            <summary>
            User log out action
            </summary>
            <returns></returns>
        </member>
        <member name="T:PrintingHouse.Controllers.ArticleController">
            <summary>
            Article controller
            </summary>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Index">
            <summary>
            Redirect to All clients
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.All(System.Nullable{System.Guid})">
            <summary>
            Show all articles or All articles of client
            </summary>
            <param name="id">Clent Id (optional)</param>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Download(System.Guid)">
            <summary>
            Download design file action
            </summary>
            <param name="articleId">Article identifier</param>
            <returns>Design file</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Select(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Choose Material and Color model (get)
            </summary>
            <param name="clientId"></param>
            <param name="articleId"></param>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.GetColorModelByMaterialId(System.String)">
            <summary>
            Post method for Ajax request from select view.
            Return Collection of color models for a particular material.
            </summary>
            <param name="materialId"></param>
            <returns>Collection of color models in Json format</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Select(PrintingHouse.Core.Models.Article.ChooseArticleMaterialAndColorsViewModel)">
            <summary>
            Redirect to Create or Edit article actions
            </summary>
            <param name="materialColors">View model with selected material and color model</param>
            <returns>Redirect to Create or Edit article actions</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Create">
            <summary>
            Create new Article (get)
            </summary>
            <returns>View with View model</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Create(PrintingHouse.Core.Models.Article.ArticleViewModel)">
            <summary>
            Creates a new article
            </summary>
            <param name="model">View model with form data from the view</param>
            <returns>Redirects to All clients</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Edit(System.Guid)">
            <summary>
            Edit a particular article
            </summary>
            <param name="id">Article identifier</param>
            <returns>View with Article view model</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Edit(PrintingHouse.Core.Models.Article.ArticleViewModel)">
            <summary>
            Change article with data from form
            </summary>
            <param name="model">Article view model with form data</param>
            <returns>Redirect to action All</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ArticleController.Delete(System.Guid)">
            <summary>
            Soft delete an article
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:PrintingHouse.Controllers.BaseController">
            <summary>
            Base controller
            </summary>
        </member>
        <member name="T:PrintingHouse.Controllers.ClientController">
            <summary>
            Client controller
            </summary>
        </member>
        <member name="M:PrintingHouse.Controllers.ClientController.Index">
            <summary>
            Permanent redirects  to All clients
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ClientController.All">
            <summary>
            Show all active clients
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ClientController.Add">
            <summary>
            Adds new Client by merchant (Get)
            </summary>
            <returns>View with form for client details</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ClientController.Add(PrintingHouse.Core.Models.Client.AddClientViewModel)">
            <summary>
            Adds new Client by merchant (Post)
            </summary>
            <returns>Redirect to all clients page</returns>
        </member>
        <member name="M:PrintingHouse.Controllers.ClientController.Delete(System.Guid)">
            <summary>
            Deletes client
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:PrintingHouse.Controllers.OrderController">
            <summary>
            Order controller
            </summary>
        </member>
        <member name="M:PrintingHouse.Controllers.OrderController.Index">
            <summary>
            Redirects to 'All' action
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.OrderController.All">
            <summary>
            Takes all orders and pass it to the view
            </summary>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.OrderController.Create(System.Guid)">
            <summary>
            Creates a view model and pass it to the view
            </summary>
            <param name="articleId"></param>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.OrderController.Create(PrintingHouse.Core.Models.Order.AddOrderViewModel)">
            <summary>
            Creates a new order
            </summary>
            <param name="model">View model with data</param>
            <returns></returns>
        </member>
        <member name="M:PrintingHouse.Controllers.OrderController.ChangeStatus(System.Guid,PrintingHouse.Infrastructure.Data.Entities.Enums.OrderStatus,System.String)">
            <summary>
            Changes status of given order
            </summary>
            <param name="id">Order id</param>
            <param name="status">New status</param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtension">
            <summary>
            Adds extention methods to the ServiceCollection of application
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtension.AddApplicationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register required services in the IoC container
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtension.AddApplicationDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add SQL Server with connection string from configuration file
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtension.AddMinIO(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register and configure MinIO object storage
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
    </members>
</doc>
